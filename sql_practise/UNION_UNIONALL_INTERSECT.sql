--UNION VS UNION ALL VS INTERSECT VS MINUS(THIS IS A SET OPERATOR)
--NUMBER OF COLUMN AND DATA TYPE MUST BE MATCHED IN QUERY

SELECT * FROM EMP;

SELECT MIN(SAL) FROM EMP 
UNION
SELECT MAX(SAL) FROM EMP ;

SELECT * FROM EMP WHERE SAL IN 
(SELECT MAX(SAL) FROM EMP)
UNION
SELECT * FROM EMP WHERE SAL IN 
(SELECT MIN(SAL) FROM EMP);


CREATE TABLE TAB1(COL1 VARCHAR2(10));
INSERT INTO TAB1 VALUES('A');
INSERT INTO TAB1 VALUES('B');
INSERT INTO TAB1 VALUES('C');
INSERT INTO TAB1 VALUES('D');

CREATE TABLE TAB2(COL1 VARCHAR2(10));
INSERT INTO TAB2 VALUES('A');
INSERT INTO TAB2 VALUES('B');
INSERT INTO TAB2 VALUES('E');
INSERT INTO TAB2 VALUES('F');

SELECT * FROM TAB1;
SELECT * FROM TAB2;

--UNION
--UNION RETURN DISTINCT RESULT OF TWO RESULT SET 
--OUTPUT IS SORTED BY DEFAULT
--NOT DESIRED FROM PERFORMANCE ASPECT(SINCE THIS INVOLVE DUPLICATE REMOVAL AND SORTING)
SELECT * FROM TAB1
UNION
SELECT * FROM TAB2;


--UNIONALL
--UNIONALL RETURN ALL RESULT OF TWO RESULT SET 
--OUTPUT IS NOT SORTED BY DEFAULT
--WONT REMOVE DUPLICATE ENTRIES
--DESIRED FROM PERFORMANCE ASPECT SINCE NO DUPLICATE REMOVAL ANS SORTING PERFORM 

SELECT * FROM TAB1
UNION ALL
SELECT * FROM TAB2;


--INTERSECT
--INTERSECT RETURNS ALL THE COMMONS ROW FROM THE BOTH QUERIES 
--OUTPUT IS SORTED BY DEFAULT
--REMOV THE DUPLICATE ENTRIES.

SELECT * FROM TAB1
INTERSECT
SELECT * FROM TAB2;

SELECT * FROM TAB2
INTERSECT
SELECT * FROM TAB1;

--MINUS
--IT RETURN ALL THE RCORD FROM ONE TABLE EXCLUDDING RECORS FROM OTHER TABLE.
--OUTPUT IS SORTED BY DEFAULT
--REMOVE THE DUPLICATE ENTRIES.

SELECT * FROM TAB1
MINUS
SELECT * FROM TAB2;

SELECT * FROM TAB2
MINUS
SELECT * FROM TAB1;