--NULL AND ORDER BY
/*
--UNKNOWN OR NOT NULL
--EMPTY STRING IS NOT A NULL

ORDERING OF NULL VALUE
ASCENDING OR DESCENDING ORDER

CREATE TABLE T(C NUMBER);

INSERT INTO T VALUES(1);
INSERT INTO T VALUES(2);
INSERT INTO T VALUES(NULL);
INSERT INTO T VALUES(4);
INSERT INTO T VALUES(NULL);
INSERT INTO T VALUES(5);

*/

SELECT * FROM T;
--BOTH OPERATOR NOT WORK IN CASE OF NULL VALUES
SELECT * FROM T WHERE C=NULL;
SELECT * FROM T WHERE C <>NULL;

--BELOW QUERY WORK PROPERLY
SELECT * FROM T WHERE C IS NULL;
SELECT * FROM T WHERE C IS NOT NULL;

SELECT COUNT(*),COUNT(C) FROM T;--6,4
SELECT SUM(C),COUNT(C),COUNT(*),SUM(C)/COUNT(*),AVG(C) FROM T;
--12	4	6	2	3(GROUP FUNCTION IS IGNORE THE NULL VALUES)

SELECT 1+'1' FROM DUAL;--2
SELECT 1+'NIT' FROM DUAL;--ERROR
SELECT 1+NULL FROM DUAL ; --NULL
SELECT 1 FROM DUAL
UNION
SELECT '1' FROM DUAL;--ERROR(ORACLE NOT CONVERT IT MANUALY)

SELECT * FROM T ORDER BY C ASC;--NULL IS APPEARED IN ENDING
SELECT * FROM T ORDER BY C DESC;--NULL IS APPEARED IN STARTING
SELECT * FROM T ORDER BY C NULLS LAST;
SELECT * FROM T ORDER BY C NULLS FIRST;
SELECT * FROM T ORDER BY C DESC NULLS LAST;
SELECT * FROM T ORDER BY C ASC NULLS LAST;
