--COMPOUND TRIGGER--
/*
COMBINE DML TRIGGER IN SINGLE BLOCK
--A COMPOUND TRIGGER COMBINE THE FOLLOWING TRIGGERSS INTO ONE SINGLE TRIGGER.

BEFORE STATEMENT TRIGGER
BEFORE ROW TRIGGER
AFTER ROW TRIGGER
AFTER STATEMENT TRIGGER

*/

CLEAR SCREEN
SET SERVEROUTPUT ON
CREATE OR REPLACE TRIGGER EMP_COMP_TR 
    FOR INSERT OR UPDATE OR DELETE ON EMP COMPOUND TRIGGER

    G_VARIABLE VARCHAR2(100) := 'DEMO ON COMPOUND TRIGGER';

    BEFORE STATEMENT IS
        L_VARIABLE VARCHAR2(20):= 'BEFORE STATEMENT';
    BEGIN 
        DBMS_OUTPUT.PUT_LINE(L_VARIABLE || G_VARIABLE);
    END BEFORE STATEMENT ;

    BEFORE EACH ROW IS 
        L_VARIABLE VARCHAR2(20):= 'BEFORE EACH ROW';
    BEGIN 
        DBMS_OUTPUT.PUT_LINE(L_VARIABLE || G_VARIABLE);
    END BEFORE EACH ROW ;
        
    AFTER EACH ROW IS 
        L_VARIABLE VARCHAR2(20):= 'AFTER EACH ROW';
    BEGIN 
    DBMS_OUTPUT.PUT_LINE(L_VARIABLE || G_VARIABLE);
    END AFTER EACH ROW ;

    AFTER STATEMENT IS
        L_VARIABLE VARCHAR2(20):= 'AFTER STATEMENT';
    BEGIN 
        DBMS_OUTPUT.PUT_LINE(L_VARIABLE || G_VARIABLE);
    END AFTER STATEMENT;
END;

SET SERVEROUTPUT ON
BEGIN 
INSERT INTO EMP(EMP_NAME,EMP_NO) VALUES('SHIVA',12233);
END;

/*
BEFORE STATEMENTDEMO ON COMPOUND TRIGGER
BEFORE EACH ROWDEMO ON COMPOUND TRIGGER
AFTER EACH ROWDEMO ON COMPOUND TRIGGER
AFTER STATEMENTDEMO ON COMPOUND TRIGGER

*/